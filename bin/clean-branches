#!/usr/bin/env bash

function usage {
  echo "SYNOPSIS: $0 [options]"
  echo "  Clean up local branches that were merged remote"
  echo ""
  echo "  options:"
  echo "     -r <repofile|repodir>, --repository=<repofile|repodir> :"
  echo "       A file with all repos relative to script"
  echo "       defaults to \$DEVTOOLDIR/.reporc"
  echo ""
  echo "     --force-delete"
  echo "       Force delete branches"

  exit 1
}

BASEPATH=$(dirname "$0")
source "$BASEPATH/.functions"


get_additional_arg "--force-delete" "FORCE"
loose_set_repo "${ARGS[@]}"

for REPO in "${REPOS[@]}"
do
  (
    [[ -z "${REPO// /}" ]] && continue
    
    REPODIR=$(expand_path "$REPO")
    [[ ! -d "$REPODIR" ]] && continue

    cd "$REPODIR"
    git rev-parse --is-inside-work-tree 2>&1>/dev/null || continue

    BASENAME=$(basename $(pwd))
    info "[$BASENAME] Cleaning local branches..."
    echo " > Fetching all remotes"
    git fetch --quiet 2>&1 | error
    git remote prune origin 2>&1 | error
    
    while read -r LOCAL
    do
      REMOTE="${LOCAL//* /}"
      echo " > Analyzing $REMOTE..."
      if [[ "$REMOTE" == "master" ]]; then
        echo "  > > Skipping 'master'"
        continue
      fi

      if [[ -z $(git branch -r | grep "$REMOTE") ]]; then
        if [[ -n $(echo "$LOCAL" | grep "^\* ") ]]; then
          warn " Cannot delete the branch '${LOCAL//* /}' which you are currently on." 
        else
          if [[ "$FORCE" -eq "1" ]]; then 
            FORCE_DELETE="--force"
          fi
          git branch --delete $FORCE_DELETE "$LOCAL" 2>&1 | error
        fi
      fi
    done < <(git branch);
    cd "$CURR_DIR"
  )
done
